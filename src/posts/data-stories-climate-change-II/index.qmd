---
title: "Data stories: Climate change II"
date: "2024-11-06 13:00:00 EST"
categories:
    - climate change
    - data science
---

Rather than dwell on the horrifying outcome of the American election, let's continue our exploration of the EDGAR data.

Let's examine the sheets available.

```{r}
sheets_avail <- readxl::excel_sheets("../data-stories-climate-change/data/edgar-co2-2024.xlsx")
sheets_avail
```
To examine CO2 emissions per GDP by country, we download the fifth sheet.

```{r}
CO2_per_GDP <- readxl::read_excel("../data-stories-climate-change/data/edgar-co2-2024.xlsx", sheet = sheets_avail[5])
str(CO2_per_GDP)
```

We need to make this longer if we want to use Tidyverse-style plotting commands.

```{r}
CO2_per_GDP_long <- CO2_per_GDP |>
  tidyr::pivot_longer(
    cols = (starts_with("19") |
              starts_with("20")),
    names_to = "year",
    values_to = "emissionsPerGDP"
  ) |>
  # Make the year a properly formatted YYYY-MM-DD string for parsing
  dplyr::mutate(year = lubridate::as_date(paste0(year, "-12-31")))
```

Now we can make our first attempt at a plot.

```{r}
#| label: fig-co2-emissions-1970-2023-big-economies
#| fig-cap: "CO2 emissions per GDP 1970-2023 from the Emissions Database for Global Atmospheric Research (EDGAR) database."
library(ggplot2)
CO2_per_GDP_long |>
  dplyr::filter(
    Country %in% c(
      "United States",
      "China",
      "Japan",
      "Germany",
      "France and Monaco",
      "Canada",
      "United Kingdom",
      "Taiwan",
      "South Korea",
      "Australia"
    )
  ) |>
  ggplot2::ggplot() +
  aes(year, emissionsPerGDP, color = Country, group = Country) +
  geom_point() +
  geom_line() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90))
```

Let's look at the top countries in 2023.

```{r}
top_2023 <- CO2_per_GDP_long |>
  dplyr::filter(year == "2023-12-31") |>
  dplyr::arrange(desc(emissionsPerGDP))

top_20_2023 <- top_2023[1:20,]
top_20_countries_2023 <- top_20_2023$Country

top_20_2023 |>
  dplyr::select(Country, emissionsPerGDP) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

Let's see how these countries fared since 1990.

```{r}
#| label: fig-co2-emissions-1990-2023-largest-in-2023
#| fig-cap: "CO2 emissions per GDP 1970-2023 from the Emissions Database for Global Atmospheric Research (EDGAR) database. This chart focuses on the top 20 emitters in 2023."

CO2_per_GDP_long |>
  dplyr::filter(Country %in% top_20_2023$Country) |>
  ggplot2::ggplot() +
  aes(year, emissionsPerGDP, color = Country, group = Country) +
  geom_point() +
  geom_line() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90))
```

Now, let's see how the top 20 in 1970 have changed.

```{r}
top_1990 <- CO2_per_GDP_long |>
  dplyr::filter(year == "1990-12-31") |>
  dplyr::arrange(desc(emissionsPerGDP))

top_20_1990 <- top_1990[1:20,]
top_20_countries_1990 <- top_20_1990$Country

top_20_1990 |>
  dplyr::select(Country, emissionsPerGDP) |>
  dplyr::filter(!is.na(Country)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

```{r}
#| label: fig-co2-emissions-1990-2023-largest-in-1990
#| fig-cap: "CO2 emissions per capita 1990-2023 from the Emissions Database for Global Atmospheric Research (EDGAR) database. This chart focuses on the top 20 emitters in 1990."

CO2_per_GDP_long |>
  dplyr::filter(Country %in% top_20_1990$Country) |>
  ggplot2::ggplot() +
  aes(year, emissionsPerGDP, color = Country, group = Country) +
  geom_point() +
  geom_line() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90))
```

So, the top emitters per GDP in 1990 have made progress in reducing emissions per GDP, even the outlier, Palau. Why is tiny Palau so inefficient? [Wikipedia](https://en.wikipedia.org/wiki/Palau) suggests that transportation is one answer, but provides no supporting information.

Just for fun, let's see which countries are the most efficient.

```{r}
bottom_1990 <- CO2_per_GDP_long |>
  dplyr::filter(year == "1990-12-31") |>
  dplyr::arrange(emissionsPerGDP)

bottom_20_1990 <- bottom_1990[1:20,]
bottom_20_countries_1990 <- bottom_20_1990$Country

bottom_20_1990 |>
  dplyr::select(Country, emissionsPerGDP) |>
  dplyr::filter(!is.na(Country)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

I see a number of tourism-heavy locations.

```{r}
#| label: fig-co2-emissions-1990-2023-smallest-in-1990
#| fig-cap: "CO2 emissions per capita 1990-2023 from the Emissions Database for Global Atmospheric Research (EDGAR) database. This chart focuses on the bottom 20 emitters in 1990."

CO2_per_GDP_long |>
  dplyr::filter(Country %in% bottom_20_1990$Country) |>
  ggplot2::ggplot() +
  aes(year, emissionsPerGDP, color = Country, group = Country) +
  geom_point() +
  geom_line() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90))
```

So, emissions/GDP have increased from 1990-2023. Let's look at some larger and wealthier countries.

```{r}
CO2_per_GDP_long |>
  dplyr::filter(Country %in% c(
      "United States",
      "China",
      "Japan",
      "Germany",
      "France and Monaco",
      "Canada",
      "United Kingdom",
      "Taiwan",
      "South Korea",
      "Australia"
    )) |>
  ggplot2::ggplot() +
  aes(year, emissionsPerGDP, color = Country, group = Country) +
  geom_point() +
  geom_line() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90))


CO2_per_GDP_long |>
  dplyr::filter(Country %in% c(
      "United States",
      "China",
      "Japan",
      "Germany",
      "France and Monaco",
      "Canada",
      "United Kingdom",
      "Taiwan",
      "South Korea",
      "Australia"
    )) |>
  dplyr::filter(year == "2023-12-31") |>
  dplyr::arrange(emissionsPerGDP) |>
  dplyr::select(Country, emissionsPerGDP) |>
  dplyr::filter(!is.na(Country)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()  
```

So, China is catching up to the wealthier countries in emissions per GDP. France, the U.K., and Germany are especially efficient. The U.S. is in the middle of this group. Canada and Australia have room to improve.
