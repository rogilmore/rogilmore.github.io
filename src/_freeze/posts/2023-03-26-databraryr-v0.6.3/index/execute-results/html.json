{
  "hash": "0d29b493d9e0905a18953a58dfb99d7b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"New databraryr v0.6.3\"\ndate: 2024-03-26\ncategories:\n    - databraryr\n---\n\n\nA new version of `databraryr` is now available on CRAN.\n\nThis version supports \"piping\" of commands:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatabraryr::list_volume_assets() |> \n  dplyr::filter(format_extension == \"csv\") |>\n  databraryr::download_session_assets_fr_df()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"9807/databrary-institutions-investigators.csv\"\n[2] \"9807/volumes-citations-monthly.csv\"           \n```\n\n\n:::\n:::\n\n\nThese CSV files are from the default volume 1, session/slot 9807.\nBy default, the files are saved in the local directory named with the session ID.\n\nSo, we can do the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninst_invest_df <- readr::read_csv(\"9807/databrary-institutions-investigators.csv\",\n                                  show_col_types = FALSE)\n\nlibrary(ggplot2)\ninst_invest_df |>\n  ggplot() +\n  aes(x = Date, y = Institutions) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nThis is obviously an older version of the plot showing growth in the number of authorizing institutions.\nThe current, more colorfully styled version is here:\n\n![<https://databrary.github.io/analytics/include/img/fig-databrary-inst-invest-timeseries-1.png>](https://databrary.github.io/analytics/include/img/fig-databrary-inst-invest-timeseries-1.png)\n\nSupporting piping had been on my to-do list, but I pushed it up the priority list on the request of some colleagues.\n\n::: {.callout-note}\n\nIn generating this post, I discovered that I had not generated an arm64 MacOS binary.\n\nSo, the standard workflow for installing the package on some Macs will not work.\n\nIn the meantime, `devtoools::install_github(\"databrary/databrary\")` should work.\n\nThis will be fixed soon.\n\nCoding is hard.\n\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}